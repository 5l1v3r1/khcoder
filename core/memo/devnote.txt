[1.xからの改良点]
	[前処理関係]
		・元の文からどのように語を抽出したかの確認が容易に
		・無視したい語（stop word）、無視したい品詞の指定がより容易になった
		・品詞体系そのものを容易に変更できるようになった
		・前処理にかかる時間を短縮（特にデータファイルの容量が大きい場合）
		・前処理完了をメールで通知できるようになった（リモート操作向け）

	[コーディング関係]
		・「先頭から数えて何番目の文書か」を利用してコーディング可能に
			「統計ソフトで行ったクラスター分析の結果、？番目の文書が特徴的だとわかった」といった場合に、容易に検索（コーディング）できる
		・（抽出語の）特定の活用形が含まれる文書をコーディング可能に
			例えば、「『死ぬ』という語の未然形が含まれる文書をコーディングする」など。
		・抽出語ではなく、特定の"文字列"が含まれている文書をコーディング可能に
			設計思想からすると多用すべき機能ではないが、用いると便利なケースも希にある。

	[ツール関係]
		・コンコーダンス機能を追加
			特定の一語が文書中でいかに使われているかを調べる際には、「文書検索」よりも便利
		・SQL文入力による自由な検索が可能に
			SQL文を入力すれば、もともと用意されている検索だけでなく、分析者の思いつく限り、ありとあらゆる検索・計算を行うことができる
		・抽出語検索の機能が充実した
			-> 前方、後方一致検索が可能に
			-> 活用形を表示可能に
			-> コンコーダンス機能とのリンク
		・文書検索の機能が充実した
			-> 検索結果を200づつに区切って表示するように
				数千もの文書が一気に表示されると、時間がかかるだけでなく、閲覧も難しい
			-> コーディング・ルールを直接Windowに打ち込めるようになった
				いちいちコーディングルール・ファイルを作製・保存しなくても、容易に高度な検索が行うことができる。「ちょっと試してみたい」時には便利
			-> ルールファイル中のコードと直接入力をAND/ORで組み合わせられるように
				コーディングルール・ファイルから読み込んだルールに、条件を追加して検索するといったことが容易に。

	[全般]
		・WindowsだけでなくLinuxにも対応した
		・各Windowの位置とサイズを記憶するようになった
		・外部アプリケーション（SPSSやIE/Netscape）への依存が減少
		・再起動しなくても、複数のプロジェクトを開けるようになった

[1.xからカットした機能]
	・JUMANへの対応
	・tf-idf値の出力

[懸案事項]
	
	・コーディングのロジック
		-> フレーズ検索
	・EUC/S-JIS/JISなど各種文字コードでの入力に対応
	・マニュアル作製

[完了したもの]
	・コーディングのロジック
		-> 同じ語を2回以上同じコード中で使った場合
		-> 品詞・活用形の指定
		-> <＊コード名>
	・前処理完了時の整合性テスト
		-> genkei.numの合計とhyosobunの行数が一致するか
		-> 各HTMLタグの出現数と、各単位デーブルの行数が一致するか
		-> bunとbun_rの行数が一致するか
		-> bunの見出し行が、bun_rで確かに見出しになっているか
	・停止語（無視する語）に対応
		-> nouseの実装
		-> 単語検索
		-> 基本形ID探索ルーチン (コンコーダンス＆コーディング)
		-> リスト出力ルーチン（品詞別リスト＆出現数分布）
		-> 単語数取得ルーチン
	・Windowを閉じるバインドをctrl-QからESCに
	・「形態素解析結果」の出力にLIMITを
	・「その他」品詞の扱いについて
	・検索ショートカット・キーを「shift + enter」から「enter」に

